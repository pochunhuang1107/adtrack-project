version: '3.8'
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-kafka:7.3.0
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CREATE_TOPICS: 'ad-events:1:1,processed-events:1:1'
        ports:
            - '9092:9092'
            - '9093:9093'
        healthcheck:
            test: ['CMD', 'nc', '-z', 'localhost', '9092']
            interval: 10s
            timeout: 5s
            retries: 5

    postgres:
        image: postgres:latest
        container_name: docker_postgres
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: adtrack
        ports:
            - '5432:5432'
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U admin -d adtrack']
            interval: 10s
            timeout: 5s
            retries: 5

    kafka-exporter:
        image: danielqsj/kafka-exporter:latest
        environment:
            KAFKA_BROKERS: kafka:9092
        ports:
            - '9308:9308'
        depends_on:
            kafka:
                condition: service_healthy

    postgres-exporter:
        image: prometheuscommunity/postgres-exporter:latest
        environment:
            DATA_SOURCE_NAME: 'postgresql://admin:admin@postgres:5432/adtrack'
        ports:
            - '9187:9187'
        depends_on:
            - postgres

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - '9090:9090'
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml

    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - '3000:3000'

    consumer:
        build:
            context: ../../etl/consumer
        container_name: kafka_consumer
        depends_on:
            kafka:
                condition: service_healthy
            postgres:
                condition: service_healthy
        environment:
            KAFKA_BROKER: kafka:9092
            KAFKA_TOPIC: processed-events
            POSTGRES_DB: adtrack
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432

    opensearch:
        image: opensearchproject/opensearch:latest
        container_name: opensearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=GGafk123!
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - opensearch-data:/usr/share/opensearch/data
        ports:
            - "9200:9200"
            - "9600:9600"

    opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:latest
        container_name: opensearch-dashboards
        environment:
            OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
        ports:
            - "5601:5601"

volumes:
    postgres-data:
    opensearch-data:
